[{"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\index.js":"1","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\App.js":"2","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\reportWebVitals.js":"3","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Products\\Products.jsx":"4","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Products\\Product\\Product.jsx":"5","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Products\\Product\\styles.js":"6","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\index.js":"7","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\NavBar\\NavBar.jsx":"8","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\NavBar\\styles.js":"9","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Products\\styles.js":"10","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\lib\\commerce.js":"11","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Cart\\Cart.jsx":"12","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Cart\\styles.js":"13","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Cart\\CartItem\\CartItem.jsx":"14","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Cart\\CartItem\\styles.js":"15","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"16","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\Checkout\\styles.js":"17","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\AddressForm.jsx":"18","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\PaymentForm.jsx":"19","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\FormInput.jsx":"20","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\Review.jsx":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":2500,"mtime":1608157358744,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":731,"mtime":1608127155224,"results":"26","hashOfConfig":"23"},{"size":1328,"mtime":1608127218244,"results":"27","hashOfConfig":"23"},{"size":370,"mtime":1608071570083,"results":"28","hashOfConfig":"23"},{"size":225,"mtime":1608132612138,"results":"29","hashOfConfig":"23"},{"size":1514,"mtime":1608131285134,"results":"30","hashOfConfig":"23"},{"size":1631,"mtime":1608074259628,"results":"31","hashOfConfig":"23"},{"size":298,"mtime":1608074541708,"results":"32","hashOfConfig":"23"},{"size":127,"mtime":1608075880292,"results":"33","hashOfConfig":"23"},{"size":1977,"mtime":1608132205052,"results":"34","hashOfConfig":"23"},{"size":597,"mtime":1608129208087,"results":"35","hashOfConfig":"23"},{"size":1329,"mtime":1608132057839,"results":"36","hashOfConfig":"23"},{"size":349,"mtime":1608129282072,"results":"37","hashOfConfig":"23"},{"size":2479,"mtime":1608157557859,"results":"38","hashOfConfig":"23"},{"size":1208,"mtime":1608132563112,"results":"39","hashOfConfig":"23"},{"size":5671,"mtime":1608156823723,"results":"40","hashOfConfig":"23"},{"size":3173,"mtime":1608157592586,"results":"41","hashOfConfig":"23"},{"size":574,"mtime":1608135067590,"results":"42","hashOfConfig":"23"},{"size":1101,"mtime":1608155231808,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"13qfxc5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\index.js",[],["91","92"],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\App.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\reportWebVitals.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Products\\Products.jsx",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Products\\Product\\Product.jsx",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Products\\Product\\styles.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\index.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\NavBar\\NavBar.jsx",["93","94"],"import React from \"react\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\n\r\nimport {AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography} from \"@material-ui/core\";\r\nimport {ShoppingCart} from \"@material-ui/icons\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport logo from \"../../assets/commerce.png\";\r\n\r\nconst NavBar = ({totalItems}) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\r\n                <Toolbar>\r\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\r\n                        <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image} />\r\n                        Commerce.js\r\n                    </Typography>\r\n                    <div className={classes.grow} />\r\n                    {location.pathname === \"/\" && (\r\n                        <div className={classes.button}>\r\n                            <IconButton component={Link} to=\"/cart\" aria-label=\"Show Cart Items\" color=\"inherit\">\r\n                                <Badge badgeContent={totalItems} color=\"secondary\">\r\n                                    <ShoppingCart />\r\n                                </Badge>\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\NavBar\\styles.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Products\\styles.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\lib\\commerce.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Cart\\styles.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\Cart\\CartItem\\styles.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["95","96","97"],"import React, {useEffect, useState} from \"react\";\r\nimport {Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button} from \"@material-ui/core\";\r\nimport {commerce} from \"../../../lib/commerce\";\r\n\r\nimport AddressForm from \"../AddressForm\";\r\nimport PaymentForm from \"../PaymentForm\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst steps = [\"Shipping address\", \"Payment details\"];\r\n\r\nconst Checkout = ({cart, order, onCaptureCheckout, error}) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, {type: \"cart\"});\r\n                setCheckoutToken(token);\r\n            } catch(err) {\r\n\r\n            }\r\n        }\r\n\r\n        generateToken();\r\n    }, [cart]);\r\n\r\n    const nextStep = () => setActiveStep(prevStep => prevStep + 1);\r\n    const backStep = () => setActiveStep(prevStep => prevStep - 1);\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n        nextStep();\r\n    }\r\n\r\n    const Confirmation = () => (\r\n        <div>\r\n            Confirmation\r\n        </div>\r\n    );\r\n\r\n    const Form = () => activeStep === 0\r\n        ? <AddressForm checkoutToken={checkoutToken} next={next} />\r\n        : <PaymentForm \r\n            checkoutToken={checkoutToken} \r\n            shippingData={shippingData} \r\n            backStep={backStep} \r\n            onCaptureCheckout={onCaptureCheckout}\r\n            nextStep={nextStep}\r\n        />;\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map(step => (\r\n                            <Step key={step}>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\Checkout\\styles.js",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\AddressForm.jsx",["98","99"],"import React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {InputLabel, Select, MenuItem, Button, Grid, Typography} from \"@material-ui/core\";\r\nimport {useForm, FormProvider} from \"react-hook-form\";\r\nimport {commerce} from \"../../lib/commerce\";\r\n\r\nimport FormInput from \"./FormInput\";\r\n\r\nconst AddressForm = ({checkoutToken, next}) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState(\"\");\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState(\"\");\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id: code, label: name}));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({id: code, label: name}));\r\n    const options = shippingOptions.map(shippingOption => ({\r\n        id: shippingOption.id, \r\n        label: `${shippingOption.description} - (${shippingOption.price.formatted_with_symbol})`\r\n    }));\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) {\r\n            fetchSubdivisions(shippingCountry);\r\n        }\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision) {\r\n            fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n        }\r\n    }, [shippingSubdivision]);\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n        \r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const {subdivisions} = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {country, region});\r\n\r\n        setShippingOptions(options);\r\n        setShippingOption(options[0].id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({...data, shippingCountry, shippingSubdivision, shippingOption}))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput required name=\"firstName\" label=\"First Name\" />\r\n                        <FormInput required name=\"lastName\" label=\"Last Name\" />\r\n                        <FormInput required name=\"address\" label=\"Address\" />\r\n                        <FormInput required name=\"email\" label=\"Email\" />\r\n                        <FormInput required name=\"city\" label=\"City\" />\r\n                        <FormInput required name=\"zip\" label=\"Zip / Postal Code\" />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(event) => setShippingCountry(event.target.value)}>\r\n                                {countries.map(country => (\r\n                                    <MenuItem key={country.id} value={country.id}>\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(event) => setShippingSubdivision(event.target.value)}>\r\n                                {subdivisions.map(subdivision => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                        {subdivision.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(event) => setShippingOption(event.target.value)}>\r\n                                {options.map(option => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <br />\r\n                    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\r\n                    </div>\r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddressForm;","C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\FormInput.jsx",[],"C:\\Users\\steve\\Desktop\\webDev\\e-commerce-app\\src\\components\\CheckoutForm\\Review.jsx",[],["100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":4,"column":45,"nodeType":"108","messageId":"109","endLine":4,"endColumn":53},{"ruleId":"106","severity":1,"message":"110","line":4,"column":55,"nodeType":"108","messageId":"109","endLine":4,"endColumn":59},{"ruleId":"106","severity":1,"message":"111","line":2,"column":54,"nodeType":"108","messageId":"109","endLine":2,"endColumn":70},{"ruleId":"106","severity":1,"message":"112","line":2,"column":72,"nodeType":"108","messageId":"109","endLine":2,"endColumn":79},{"ruleId":"106","severity":1,"message":"113","line":2,"column":81,"nodeType":"108","messageId":"109","endLine":2,"endColumn":87},{"ruleId":"114","severity":1,"message":"115","line":27,"column":8,"nodeType":"116","endLine":27,"endColumn":10,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":39,"column":8,"nodeType":"116","endLine":39,"endColumn":29,"suggestions":"119"},{"ruleId":"102","replacedBy":"120"},{"ruleId":"104","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["125"],["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"130","text":"131"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"132","text":"133"},[1326,1328],"[checkoutToken.id]",[1647,1668],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]